{"version":3,"sources":["components/Entity/Entity.module.css","components/EntitiesList/EntitiesList.module.css","services/fetchAPI.js","services/helpers.js","components/EntitiesList/EntitiesList.js","pages/FilmsPage.js","components/Entity/Entity.js","components/SingleFilm/SingleFilm.js","pages/SingleFilmPage.js","pages/PlanetPage.js","pages/StarShipsPage.js","components/SearchForm/SearchInpute.js","components/StarWars/StarWars.js","components/App/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchEntity","url","get","getCategoryFromUrl","urlParseArr","Object","keys","qs","parse","split","length","getEntitiesArrFromUrl","arrEntitiesUrl","stateFunc","map","planetUrl","then","res","arr","data","prev","withRouter","props","entitiesArr","name","match","sort","a","b","entityObj","className","css","list","key","to","pathname","route","path","FilmsPage","state","response","entitiesValue","entity","this","results","setState","entities","React","Component","Entity","category","entityName","filter","el","idx","join","container","title","entries","value","item","descr","useState","planets","setPlanets","starships","setStarships","useEffect","SingleFilmPage","location","localStorage","setItem","JSON","stringify","getItem","PlanetPage","StarShips","InputeForm","inputValue","type","StarWars","exact","component","StarShipsPage","App","ReactDOM","render","basename","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,wB,mBCAhHD,EAAOC,QAAU,CAAC,KAAO,6B,iNCCzBC,IAAMC,SAASC,QAAU,uBAElB,IAIMC,EAAc,SAAAC,GACzB,OAAOJ,IAAMK,IAAID,I,yBCANE,EAAqB,SAAAF,GAChC,IAAMG,EAAcC,OAAOC,KAAKC,IAAGC,MAAMP,IAAM,GAAGQ,MAAM,KAExD,OAAOL,EAAYA,EAAYM,OAAS,IAG7BC,EAAwB,SAACC,EAAgBC,GACpDD,EAAeE,KAAI,SAAAC,GAAS,OAC1Bf,EAAYe,GAAWC,MAAK,SAAAC,GAC1B,IAAMC,EAAM,CAACD,EAAIE,MACjBN,GAAU,SAAAO,GAAI,4BAAQA,GAASF,a,iBCyBtBG,eAvCM,SAAAC,GAAU,IACrBC,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAE3B,OACE,4BACGF,GACCA,EACGG,MAAK,SAACC,EAAGC,GACR,OAAID,EAAE,GAAD,OAAIH,IAAUI,EAAE,GAAD,OAAIJ,IACf,EAELG,EAAE,GAAD,OAAIH,IAAUI,EAAE,GAAD,OAAIJ,KACd,EAEH,KAERV,KAAI,SAAAe,GAAS,OACZ,wBAAIC,UAAWC,IAAIC,KAAMC,IAAKJ,EAAU,GAAD,OAAIL,KACxCK,GACC,kBAAC,IAAD,CACEK,GAAI,CACFC,SAAS,IAAD,OAAMhC,EAAmB0B,EAAU5B,KAAnC,YACN4B,EAAU,GAAD,OAAIL,KAEfC,MAAO,CACLxB,IAAK4B,EAAU5B,IACfmC,MAAOX,EAAMY,QAIhBR,EAAU,GAAD,OAAIL,aC/BXc,E,2MACnBC,MAAQ,CACNC,SAAU,GACVC,cAAe,S,mFAGI,IHNMC,EGMP,QHNOA,EGOXC,KAAKJ,MAAME,cHNpB5C,IAAMK,IAAN,WAAcwC,IAAU1B,MAAK,SAAAC,GAAG,OAAIA,EAAIE,KAAKyB,YGMV5B,MAAK,SAAAC,GAAG,OAC9C,EAAK4B,SAAS,CAAEL,SAAUvB,S,+BAIpB,IACAuB,EAAaG,KAAKJ,MAAlBC,SAEFM,EAAWN,GAAsB,KAEvC,OACE,6BACE,kBAAC,EAAD,CAAcjB,YAAauB,EAAUtB,KAAK,e,GAnBXuB,IAAMC,W,yBCyC9BC,EAzCA,SAAA3B,GAAU,IACfoB,EAAWpB,EAAXoB,OACFQ,EAAW/C,EAAmBuC,EAAOzC,KACrCkD,EAAaD,EAChBzC,MAAM,IACN2C,QAAO,SAACC,EAAIC,GAAL,OAAaA,IAAQJ,EAASxC,OAAS,KAC9C6C,KAAK,IAER,OACE,yBAAKzB,UAAWC,IAAIyB,WACF,SAAfL,GACC,wBAAIrB,UAAWC,IAAI0B,OAChBN,EADH,IACgBT,EAAOlB,MAGzB,4BACGkB,GACCrC,OAAOqD,QAAQhB,GACZU,QAAO,SAAAC,GAAO,IAAD,cACSA,EADT,GACLpB,EADK,KACA0B,EADA,KAEZ,MACU,SAAR1B,GACQ,UAARA,GACQ,QAARA,GACU,YAAV0B,KAGH7C,KAAI,SAAAuC,GAAO,IAAD,cACYA,EADZ,GACFpB,EADE,KACG0B,EADH,KAET,OACE,wBAAI7B,UAAWC,IAAI6B,KAAM3B,IAAKA,GAC5B,uBAAGH,UAAWC,IAAIP,MAAOS,GACzB,uBAAGH,UAAWC,IAAI8B,OAAQF,UCR7BtC,eAtBI,SAAAC,GAAU,IACnBoB,EAAkBpB,EAAlBoB,OAAQjB,EAAUH,EAAVG,MADU,EAEIqC,mBAAS,IAFb,mBAEnBC,EAFmB,KAEVC,EAFU,OAGQF,mBAAS,IAHjB,mBAGnBG,EAHmB,KAGRC,EAHQ,KAU1B,OALAC,qBAAU,WACRxD,EAAsB+B,EAAOqB,QAASC,GACtCrD,EAAsB+B,EAAOuB,UAAWC,KACvC,IAGD,6BACE,4BACE,yCADF,IACoB,2BAAIxB,EAAOe,QAE/B,kBAAC,EAAD,CAAclC,YAAawC,EAASvC,KAAK,SACzC,kBAAC,EAAD,CAAcD,YAAa0C,EAAWzC,KAAK,SAC3C,kBAAC,EAAD,CAAQkB,OAAQA,EAAQjB,MAAOA,QCnBhB2C,E,2MACnB7B,MAAQ,CACNG,OAAQ,M,mFAGW,IAAD,SACUC,KAAKrB,MAAzB+C,EADU,EACVA,SAAU5C,EADA,EACAA,MAElB,GAAI4C,EAAS5C,MAAO,CAClB,IAAMxB,EAAMoE,EAAS5C,MAAMxB,IAC3BD,EAAYC,GAAKe,MAAK,SAAAC,GACpB,EAAK4B,SAAS,CAAEH,OAAQzB,EAAIE,OAC5BmD,aAAaC,QAAQ9C,EAAMY,KAAMmC,KAAKC,UAAUxD,EAAIE,eAGtDwB,KAAKE,SAAS,CAAEH,OAAQ8B,KAAKhE,MAAM8D,aAAaI,QAAQjD,EAAMY,W,+BAIxD,IACAK,EAAWC,KAAKJ,MAAhBG,OACAjB,EAAUkB,KAAKrB,MAAfG,MAER,OAAOiB,GAAU,kBAAC,EAAD,CAAYA,OAAQA,EAAQjB,MAAOA,Q,GAvBZsB,IAAMC,WCA7B2B,E,2MACnBpC,MAAQ,CACNG,OAAQ,M,mFAGW,IAAD,SACUC,KAAKrB,MAAzB+C,EADU,EACVA,SAAU5C,EADA,EACAA,MAElB,GAAI4C,EAAS5C,MAAO,CAClB,IAAMxB,EAAMoE,EAAS5C,MAAMxB,IAC3BD,EAAYC,GAAKe,MAAK,SAAAC,GACpB,EAAK4B,SAAS,CAAEH,OAAQzB,EAAIE,OAC5BmD,aAAaC,QAAQ9C,EAAMY,KAAMmC,KAAKC,UAAUxD,EAAIE,eAGtDwB,KAAKE,SAAS,CAAEH,OAAQ8B,KAAKhE,MAAM8D,aAAaI,QAAQjD,EAAMY,W,+BAIxD,IACAK,EAAWC,KAAKJ,MAAhBG,OACAjB,EAAUkB,KAAKrB,MAAfG,MAER,OAAO,6BAAMiB,GAAU,kBAAC,EAAD,CAAQA,OAAQA,EAAQjB,MAAOA,S,GAvBlBsB,IAAMC,WCAzB4B,E,2MACnBrC,MAAQ,CACNG,OAAQ,M,mFAGW,IAAD,SACUC,KAAKrB,MAAzB+C,EADU,EACVA,SAAU5C,EADA,EACAA,MAElB,GAAI4C,EAAS5C,MAAO,CAClB,IAAMxB,EAAMoE,EAAS5C,MAAMxB,IAC3BD,EAAYC,GAAKe,MAAK,SAAAC,GACpB,EAAK4B,SAAS,CAAEH,OAAQzB,EAAIE,OAC5BmD,aAAaC,QAAQ9C,EAAMY,KAAMmC,KAAKC,UAAUxD,EAAIE,eAGtDwB,KAAKE,SAAS,CAAEH,OAAQ8B,KAAKhE,MAAM8D,aAAaI,QAAQjD,EAAMY,W,+BAIxD,IACAK,EAAWC,KAAKJ,MAAhBG,OACAjB,EAAUkB,KAAKrB,MAAfG,MAER,OAAO,6BAAMiB,GAAU,kBAAC,EAAD,CAAQA,OAAQA,EAAQjB,MAAOA,S,GAvBnBsB,IAAMC,WCFxB6B,E,2MACnBtC,MAAQ,CACNuC,WAAY,I,wEAGZ,OACE,6BACE,8BACE,2BAAOC,KAAK,gB,GARkBhC,IAAMC,WCmB/BgC,EAbE,kBACf,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO3C,KAAK,SAAS4C,OAAK,EAACC,UAAW5C,IACtC,kBAAC,IAAD,CAAOD,KAAK,aAAa4C,OAAK,EAACC,UAAWd,IAC1C,kBAAC,IAAD,CAAO/B,KAAK,eAAe4C,OAAK,EAACC,UAAWP,IAC5C,kBAAC,IAAD,CAAOtC,KAAK,iBAAiB4C,OAAK,EAACC,UAAWC,IAC9C,kBAAC,IAAD,CAAUjD,GAAG,cCFJkD,EARH,WACV,OACE,yBAAKtD,UAAU,OACb,kBAAC,IAAD,CAAOoD,UAAWF,MCFxBK,IAASC,OACP,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,CAAOL,UAAWE,KAEpBI,SAASC,eAAe,W","file":"static/js/main.cb54a0b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Entity_title__kq8c5\",\"item\":\"Entity_item__22Gzs\",\"name\":\"Entity_name__myJjJ\",\"descr\":\"Entity_descr__X9Efh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"EntitiesList_list__2B1i8\"};","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://swapi.co/api\";\r\n\r\nexport const fetchEntities = entity => {\r\n  return axios.get(`/${entity}`).then(res => res.data.results);\r\n};\r\n\r\nexport const fetchEntity = url => {\r\n  return axios.get(url);\r\n};\r\n","import qs from \"query-string\";\r\nimport { fetchEntity } from \"./fetchAPI\";\r\n\r\nexport const getIdFromUrl = url => {\r\n  const urlParseArr = Object.keys(qs.parse(url))[0].split(\"/\");\r\n\r\n  return urlParseArr[urlParseArr.length - 2];\r\n};\r\n\r\nexport const getCategoryFromUrl = url => {\r\n  const urlParseArr = Object.keys(qs.parse(url))[0].split(\"/\");\r\n\r\n  return urlParseArr[urlParseArr.length - 3];\r\n};\r\n\r\nexport const getEntitiesArrFromUrl = (arrEntitiesUrl, stateFunc) => {\r\n  arrEntitiesUrl.map(planetUrl =>\r\n    fetchEntity(planetUrl).then(res => {\r\n      const arr = [res.data];\r\n      stateFunc(prev => [...prev, ...arr]);\r\n    })\r\n  );\r\n};\r\n\r\n// args is arr [category, id] or [category]\r\nexport const getRoute = args =>\r\n  [...args].reduce((acc, el) => acc + `/${el}`, \"\").trim();\r\n","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { getCategoryFromUrl } from \"../../services/helpers\";\r\nimport css from \"./EntitiesList.module.css\";\r\n\r\nconst EntitiesList = props => {\r\n  const { entitiesArr, name, match } = props;\r\n\r\n  return (\r\n    <ul>\r\n      {entitiesArr &&\r\n        entitiesArr\r\n          .sort((a, b) => {\r\n            if (a[`${name}`] > b[`${name}`]) {\r\n              return 1;\r\n            }\r\n            if (a[`${name}`] < b[`${name}`]) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          })\r\n          .map(entityObj => (\r\n            <li className={css.list} key={entityObj[`${name}`]}>\r\n              {entityObj && (\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/${getCategoryFromUrl(entityObj.url)}/${\r\n                      entityObj[`${name}`]\r\n                    }`,\r\n                    match: {\r\n                      url: entityObj.url,\r\n                      route: match.path\r\n                    }\r\n                  }}\r\n                >\r\n                  {entityObj[`${name}`]}\r\n                </NavLink>\r\n              )}\r\n            </li>\r\n          ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(EntitiesList);\r\n","import React from \"react\";\r\nimport { fetchEntities } from \"../services/fetchAPI\";\r\nimport EntitiesList from \"../components/EntitiesList/EntitiesList\";\r\n\r\nexport default class FilmsPage extends React.Component {\r\n  state = {\r\n    response: [],\r\n    entitiesValue: \"films\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetchEntities(this.state.entitiesValue).then(res =>\r\n      this.setState({ response: res })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { response } = this.state;\r\n\r\n    const entities = response ? response : null;\r\n\r\n    return (\r\n      <div>\r\n        <EntitiesList entitiesArr={entities} name=\"title\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { getCategoryFromUrl } from \"../../services/helpers\";\r\nimport css from \"./Entity.module.css\";\r\n\r\nconst Entity = props => {\r\n  const { entity } = props;\r\n  const category = getCategoryFromUrl(entity.url);\r\n  const entityName = category\r\n    .split(\"\")\r\n    .filter((el, idx) => idx !== category.length - 1)\r\n    .join(\"\");\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      {entityName !== \"film\" && (\r\n        <h2 className={css.title}>\r\n          {entityName} {entity.name}\r\n        </h2>\r\n      )}\r\n      <ul>\r\n        {entity &&\r\n          Object.entries(entity)\r\n            .filter(el => {\r\n              const [key, value] = el;\r\n              return (\r\n                key !== \"name\" &&\r\n                key !== \"films\" &&\r\n                key !== \"url\" &&\r\n                value !== \"unknown\"\r\n              );\r\n            })\r\n            .map(el => {\r\n              const [key, value] = el;\r\n              return (\r\n                <li className={css.item} key={key}>\r\n                  <p className={css.name}>{key}</p>\r\n                  <p className={css.descr}>{value}</p>\r\n                </li>\r\n              );\r\n            })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EntitiesList from \"../EntitiesList/EntitiesList\";\r\nimport { getEntitiesArrFromUrl } from \"../../services/helpers\";\r\nimport Entity from \"../Entity/Entity\";\r\n\r\nconst SingleFilm = props => {\r\n  const { entity, match } = props;\r\n  const [planets, setPlanets] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getEntitiesArrFromUrl(entity.planets, setPlanets);\r\n    getEntitiesArrFromUrl(entity.starships, setStarships);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <p>Star Wars:</p> <p>{entity.title}</p>\r\n      </h2>\r\n      <EntitiesList entitiesArr={planets} name=\"name\" />\r\n      <EntitiesList entitiesArr={starships} name=\"name\" />\r\n      <Entity entity={entity} match={match} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SingleFilm);\r\n","import React from \"react\";\r\nimport SingleFilm from \"../components/SingleFilm/SingleFilm\";\r\nimport { fetchEntity } from \"../services/fetchAPI\";\r\n\r\nexport default class SingleFilmPage extends React.Component {\r\n  state = {\r\n    entity: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n\r\n    if (location.match) {\r\n      const url = location.match.url;\r\n      fetchEntity(url).then(res => {\r\n        this.setState({ entity: res.data });\r\n        localStorage.setItem(match.path, JSON.stringify(res.data));\r\n      });\r\n    } else {\r\n      this.setState({ entity: JSON.parse(localStorage.getItem(match.path)) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { entity } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return entity && <SingleFilm entity={entity} match={match} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { fetchEntity } from \"../services/fetchAPI\";\r\nimport Entity from \"../components/Entity/Entity\";\r\n\r\nexport default class PlanetPage extends React.Component {\r\n  state = {\r\n    entity: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n\r\n    if (location.match) {\r\n      const url = location.match.url;\r\n      fetchEntity(url).then(res => {\r\n        this.setState({ entity: res.data });\r\n        localStorage.setItem(match.path, JSON.stringify(res.data));\r\n      });\r\n    } else {\r\n      this.setState({ entity: JSON.parse(localStorage.getItem(match.path)) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { entity } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return <div>{entity && <Entity entity={entity} match={match} />}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { fetchEntity } from \"../services/fetchAPI\";\r\nimport Entity from \"../components/Entity/Entity\";\r\n\r\nexport default class StarShips extends React.Component {\r\n  state = {\r\n    entity: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n\r\n    if (location.match) {\r\n      const url = location.match.url;\r\n      fetchEntity(url).then(res => {\r\n        this.setState({ entity: res.data });\r\n        localStorage.setItem(match.path, JSON.stringify(res.data));\r\n      });\r\n    } else {\r\n      this.setState({ entity: JSON.parse(localStorage.getItem(match.path)) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { entity } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return <div>{entity && <Entity entity={entity} match={match} />}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class InputeForm extends React.Component {\r\n  state = {\r\n    inputValue: \"\"\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <input type=\"input\"></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport FilmsPage from \"../../pages/FilmsPage\";\r\nimport SingleFilmPage from \"../../pages/SingleFilmPage\";\r\nimport PlanetPage from \"../../pages/PlanetPage\";\r\nimport StarShipsPage from \"../../pages/StarShipsPage\";\r\nimport Input from \"../SearchForm/SearchInpute\";\r\n\r\nconst StarWars = () => (\r\n  <div>\r\n    <Input />\r\n    <Switch>\r\n      <Route path=\"/films\" exact component={FilmsPage} />\r\n      <Route path=\"/films/:id\" exact component={SingleFilmPage} />\r\n      <Route path=\"/planets/:id\" exact component={PlanetPage} />\r\n      <Route path=\"/starships/:id\" exact component={StarShipsPage} />\r\n      <Redirect to=\"/films\" />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default StarWars;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport StarWars from \"../StarWars/StarWars\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route component={StarWars} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route } from \"react-router-dom\";\n// import './index.css';\nimport App from \"./components/App/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <Route component={App} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}