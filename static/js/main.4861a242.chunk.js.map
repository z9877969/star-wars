{"version":3,"sources":["components/Entity/Entity.module.css","components/EntitiesList/EntitiesList.module.css","components/SearchForm/Search.module.css","services/fetchAPI.js","services/helpers.js","components/EntitiesList/EntitiesList.js","pages/FilmsPage.js","components/Entity/Entity.js","components/SingleFilm/SingleFilm.js","pages/SingleFilmPage.js","pages/PlanetPage.js","pages/StarShipsPage.js","pages/SearchPage.js","components/SearchForm/SearchForm.js","components/StarWars/StarWars.js","components/App/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchEntity","url","get","catch","err","console","log","getCategoryFromUrl","urlParseArr","Object","keys","qs","parse","split","length","getEntitiesArrFromUrl","arrEntitiesUrl","stateFunc","map","planetUrl","then","res","arr","data","prev","getNameKey","objSorting","find","key","withRouter","props","entitiesArr","match","nameKey","sort","a","b","sortEntitiesArr","entityObj","className","css","list","shortid","generate","to","pathname","route","path","FilmsPage","state","response","entitiesValue","entity","this","results","setState","entities","name","React","Component","Entity","category","entityName","filter","el","idx","join","container","title","entries","value","Array","isArray","item","descr","useState","planets","setPlanets","starships","setStarships","useEffect","SingleFilmPage","location","localStorage","setItem","JSON","stringify","getItem","PlanetPage","StarShips","queryEnts","setQueryEnts","qObj","search","getDataFromQuery","categories","includes","query","q","fetchEntitiesByQuery","options","inputQuery","queryResponseArr","handlerSubmit","e","preventDefault","history","target","children","push","handlerGoBackHome","type","onClick","button","onSubmit","placeholder","StarWars","exact","component","SearchPage","StarShipsPage","App","ReactDOM","render","basename","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,wB,mBCAhHD,EAAOC,QAAU,CAAC,KAAO,6B,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,iNCC3BC,IAAMC,SAASC,QAAU,uBAElB,IAOMC,EAAc,SAAAC,GACzB,OAAOJ,IAAMK,IAAID,GAAKE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,0CCHpCG,EAAqB,SAAAN,GAChC,IAAMO,EAAcC,OAAOC,KAAKC,IAAGC,MAAMX,IAAM,GAAGY,MAAM,KAExD,OAAOL,EAAYA,EAAYM,OAAS,IAG7BC,EAAwB,SAACC,EAAgBC,GACpDD,EAAeE,KAAI,SAAAC,GAAS,OAC1BnB,EAAYmB,GAAWC,MAAK,SAAAC,GAC1B,IAAMC,EAAM,CAACD,EAAIE,MACjBN,GAAU,SAAAO,GAAI,4BAAQA,GAASF,aAgBxBG,EAAa,SAAAC,GACxB,MAA+D,SAAxDjB,OAAOC,KAAKgB,GAAYC,MAAK,SAAAC,GAAG,MAAY,SAARA,KACvC,OACA,S,iBCCSC,eA7BM,SAAAC,GAAU,IACrBC,EAAuBD,EAAvBC,YAAaC,EAAUF,EAAVE,MAErB,OACE,4BACGD,GD0BwB,SAACA,EAAaE,GAC3C,OAAOF,EAAYG,MAAK,SAACC,EAAGC,GAC1B,OAAID,EAAE,GAAD,OAAIV,EAAWU,KAAQC,EAAE,GAAD,OAAIX,EAAWW,KACnC,EAELD,EAAE,GAAD,OAAIV,EAAWU,KAAQC,EAAE,GAAD,OAAIX,EAAWW,MAClC,EAEH,KCjCHC,CAAgBN,GAAab,KAAI,SAAAoB,GAAS,OACxC,wBAAIC,UAAWC,IAAIC,KAAMb,IAAKc,IAAQC,YACnCL,GACC,kBAAC,IAAD,CACEM,GAAI,CACFC,SAAS,IAAD,OAAMtC,EAAmB+B,EAAUrC,KAAnC,YACNqC,EAAU,GAAD,OAAIb,EAAWa,MAE1BN,MAAO,CACL/B,IAAKqC,EAAUrC,IACf6C,MAAOd,EAAMe,QAIhBT,EAAU,GAAD,OAAIb,EAAWa,cC1BpBU,E,2MACnBC,MAAQ,CACNC,SAAU,GACVC,cAAe,S,mFAGI,IHNMC,EGMP,QHNOA,EGOXC,KAAKJ,MAAME,cHNpBtD,IACJK,IADI,WACIkD,IACRhC,MAAK,SAAAC,GAAG,OAAIA,EAAIE,KAAK+B,WACrBnD,OAAM,SAAAC,GAAG,OAAIA,MGG0BgB,MAAK,SAAAC,GAAG,OAC9C,EAAKkC,SAAS,CAAEL,SAAU7B,S,+BAIpB,IACA6B,EAAaG,KAAKJ,MAAlBC,SAEFM,EAAWN,GAAsB,KAEvC,OACE,6BACE,kBAAC,EAAD,CAAcnB,YAAayB,EAAUC,KAAK,e,GAnBXC,IAAMC,W,yBC4C9BC,EA5CA,SAAA9B,GAAU,IACfsB,EAAWtB,EAAXsB,OACFS,EAAWtD,EAAmB6C,EAAOnD,KACrC6D,EAAaD,EAChBhD,MAAM,IACNkD,QAAO,SAACC,EAAIC,GAAL,OAAaA,IAAQJ,EAAS/C,OAAS,KAC9CoD,KAAK,IAER,OACE,yBAAK3B,UAAWC,IAAI2B,WACF,SAAfL,GACC,wBAAIvB,UAAWC,IAAI4B,OAChBN,EADH,IACgBV,EAAOK,MAGzB,4BACGL,GACC3C,OAAO4D,QAAQjB,GACZW,QAAO,SAAAC,GAAO,IAAD,cACSA,EADT,GACLpC,EADK,KACA0C,EADA,KAEZ,MACU,SAAR1C,GACQ,UAARA,GACQ,QAARA,GACQ,YAARA,GACQ,WAARA,GACU,YAAV0C,IACCC,MAAMC,QAAQF,MAGlBpD,KAAI,SAAA8C,GAAO,IAAD,cACYA,EADZ,GACFpC,EADE,KACG0C,EADH,KAET,OACE,wBAAI/B,UAAWC,IAAIiC,KAAM7C,IAAKA,GAC5B,uBAAGW,UAAWC,IAAIiB,MAAO7B,GACzB,uBAAGW,UAAWC,IAAIkC,OAAQJ,UCX7BzC,eAtBI,SAAAC,GAAU,IACnBsB,EAAkBtB,EAAlBsB,OAAQpB,EAAUF,EAAVE,MADU,EAEI2C,mBAAS,IAFb,mBAEnBC,EAFmB,KAEVC,EAFU,OAGQF,mBAAS,IAHjB,mBAGnBG,EAHmB,KAGRC,EAHQ,KAU1B,OALAC,qBAAU,WACRjE,EAAsBqC,EAAOwB,QAASC,GACtC9D,EAAsBqC,EAAO0B,UAAWC,KACvC,IAGD,6BACE,4BACE,yCADF,IACoB,2BAAI3B,EAAOgB,QAE/B,kBAAC,EAAD,CAAcrC,YAAa6C,EAASnB,KAAK,SACzC,kBAAC,EAAD,CAAc1B,YAAa+C,EAAWrB,KAAK,SAC3C,kBAAC,EAAD,CAAQL,OAAQA,EAAQpB,MAAOA,QCnBhBiD,E,2MACnBhC,MAAQ,CACNG,OAAQ,M,mFAGW,IAAD,SACUC,KAAKvB,MAAzBoD,EADU,EACVA,SAAUlD,EADA,EACAA,MAElB,GAAIkD,EAASlD,MAAO,CAClB,IAAM/B,EAAMiF,EAASlD,MAAM/B,IAC3BD,EAAYC,GAAKmB,MAAK,SAAAC,GACpB,EAAKkC,SAAS,CAAEH,OAAQ/B,EAAIE,OAC5B4D,aAAaC,QAAQpD,EAAMe,KAAMsC,KAAKC,UAAUjE,EAAIE,eAGtD8B,KAAKE,SAAS,CAAEH,OAAQiC,KAAKzE,MAAMuE,aAAaI,QAAQvD,EAAMe,W,+BAIxD,IACAK,EAAWC,KAAKJ,MAAhBG,OACApB,EAAUqB,KAAKvB,MAAfE,MAER,OAAOoB,GAAU,kBAAC,EAAD,CAAYA,OAAQA,EAAQpB,MAAOA,Q,GAvBZ0B,IAAMC,WCA7B6B,E,2MACnBvC,MAAQ,CACNG,OAAQ,M,mFAGW,IAAD,SACUC,KAAKvB,MAAzBoD,EADU,EACVA,SAAUlD,EADA,EACAA,MAElB,GAAIkD,EAASlD,MAAO,CAClB,IAAM/B,EAAMiF,EAASlD,MAAM/B,IAC3BD,EAAYC,GAAKmB,MAAK,SAAAC,GACpB,EAAKkC,SAAS,CAAEH,OAAQ/B,EAAIE,OAC5B4D,aAAaC,QAAQpD,EAAMe,KAAMsC,KAAKC,UAAUjE,EAAIE,eAGtD8B,KAAKE,SAAS,CAAEH,OAAQiC,KAAKzE,MAAMuE,aAAaI,QAAQvD,EAAMe,W,+BAIxD,IACAK,EAAWC,KAAKJ,MAAhBG,OACApB,EAAUqB,KAAKvB,MAAfE,MAER,OAAO,6BAAMoB,GAAU,kBAAC,EAAD,CAAQA,OAAQA,EAAQpB,MAAOA,S,GAvBlB0B,IAAMC,WCAzB8B,E,2MACnBxC,MAAQ,CACNG,OAAQ,M,mFAGW,IAAD,SACUC,KAAKvB,MAAzBoD,EADU,EACVA,SAAUlD,EADA,EACAA,MAElB,GAAIkD,EAASlD,MAAO,CAClB,IAAM/B,EAAMiF,EAASlD,MAAM/B,IAC3BD,EAAYC,GAAKmB,MAAK,SAAAC,GACpB,EAAKkC,SAAS,CAAEH,OAAQ/B,EAAIE,OAC5B4D,aAAaC,QAAQpD,EAAMe,KAAMsC,KAAKC,UAAUjE,EAAIE,eAGtD8B,KAAKE,SAAS,CAAEH,OAAQiC,KAAKzE,MAAMuE,aAAaI,QAAQvD,EAAMe,W,+BAIxD,IACAK,EAAWC,KAAKJ,MAAhBG,OACApB,EAAUqB,KAAKvB,MAAfE,MAER,OAAO,6BAAMoB,GAAU,kBAAC,EAAD,CAAQA,OAAQA,EAAQpB,MAAOA,S,GAvBnB0B,IAAMC,WCmC9B9B,eAjCI,SAAAC,GAAU,IACnBoD,EAAapD,EAAboD,SADkB,EAEQP,mBAAS,IAFjB,mBAEnBe,EAFmB,KAERC,EAFQ,KAIpBC,ERcwB,SAAAV,GAG9B,OAFUvE,IAAGC,MAAMsE,EAASW,QQffC,CAAiBZ,GAExBa,EACJtF,OAAOC,KAAKkF,GAAM9E,OAAS,GAAK8E,EAAKG,WAAWlF,MAAM,IAAImF,SAAS,KAC/DJ,EAAKG,WAAWlF,MAAM,KACtB,CAAC+E,EAAKG,YACNE,EAAQL,EAAKM,EAanB,OAXAlB,qBAAU,WACRW,EAAa,IAEb,YAAII,GAAY7E,KAAI,SAAA2C,GAAQ,OTNI,SAACA,EAAUoC,GAC7C,IAAMhG,EAAG,WAAO4D,EAAP,oBAA2BoC,GAEpC,OAAOpG,IACJK,IAAID,GACJmB,MAAK,SAAAC,GAAG,OAAIA,EAAIE,KAAK+B,WACrBnD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MSCxB+F,CAAqBtC,EAAUoC,GAAO7E,MAAK,SAAAC,GACzC,IAAMC,EAAMD,EACZsE,GAAa,SAAAnE,GAAI,4BAAQA,GAAR,YAAiBF,eAGrC,CAAC2E,IAGF,6BACE,4BACE,8CAEF,kBAAC,EAAD,CAAclE,YAAa2D,Q,iBC9B3BU,EACQ,CAAC,QAAS,YAAa,WAGtBvE,cAAU,2MAErBoB,MAAQ,CACNoD,WAAY,GACZC,iBAAkB,IAJC,EAOrBC,cAAgB,SAAAC,GACdA,EAAEC,iBADiB,IAEXC,EAAY,EAAK5E,MAAjB4E,QAEFL,EAAaG,EAAEG,OAAOC,SAAS,GAAGtC,MAExC,GAAI+B,EACF,OAAOK,EAAQG,KAAK,CAClBhE,SAAU,UACVgD,OAAO,cAAD,OAAgBO,EAAhB,eAAyCC,MAhBhC,EAoBrBS,kBAAoB,WACE,EAAKhF,MAAjB4E,QACAG,KAAK,WAtBM,wEA0BnB,OACE,6BACE,4BACEE,KAAK,SACLC,QAAS3D,KAAKyD,kBACdvE,UAAWC,IAAIyE,QAHjB,QAOA,0BAAMC,SAAU7D,KAAKkD,eACnB,2BAAOQ,KAAK,QAAQI,YAAY,cAChC,4BAAQJ,KAAK,UAAb,gBArCa,GACErD,IAAMC,YCclByD,EAdE,kBACf,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrE,KAAK,UAAUsE,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOxE,KAAK,SAASsE,OAAK,EAACC,UAAWtE,IACtC,kBAAC,IAAD,CAAOD,KAAK,aAAasE,OAAK,EAACC,UAAWrC,IAC1C,kBAAC,IAAD,CAAOlC,KAAK,eAAesE,OAAK,EAACC,UAAW9B,IAC5C,kBAAC,IAAD,CAAOzC,KAAK,iBAAiBsE,OAAK,EAACC,UAAWE,IAC9C,kBAAC,IAAD,CAAU5E,GAAG,cCJJ6E,EARH,WACV,OACE,yBAAKlF,UAAU,OACb,kBAAC,IAAD,CAAO+E,UAAWF,MCFxBM,IAASC,OACP,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,CAAON,UAAWG,KAEpBI,SAASC,eAAe,W","file":"static/js/main.4861a242.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Entity_title__kq8c5\",\"item\":\"Entity_item__22Gzs\",\"name\":\"Entity_name__myJjJ\",\"descr\":\"Entity_descr__X9Efh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"EntitiesList_list__2B1i8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Search_button__3MVsp\"};","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://swapi.co/api\";\r\n\r\nexport const fetchEntities = entity => {\r\n  return axios\r\n    .get(`/${entity}`)\r\n    .then(res => res.data.results)\r\n    .catch(err => err);\r\n};\r\n\r\nexport const fetchEntity = url => {\r\n  return axios.get(url).catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchEntitiesByQuery = (category, query) => {\r\n  const url = `/${category}/?search=${query}`;\r\n\r\n  return axios\r\n    .get(url)\r\n    .then(res => res.data.results)\r\n    .catch(err => console.log(err));\r\n};\r\n","import qs from \"query-string\";\r\nimport { fetchEntity } from \"./fetchAPI\";\r\n\r\nexport const getIdFromUrl = url => {\r\n  const urlParseArr = Object.keys(qs.parse(url))[0].split(\"/\");\r\n\r\n  return urlParseArr[urlParseArr.length - 2];\r\n};\r\n\r\nexport const getCategoryFromUrl = url => {\r\n  const urlParseArr = Object.keys(qs.parse(url))[0].split(\"/\");\r\n\r\n  return urlParseArr[urlParseArr.length - 3];\r\n};\r\n\r\nexport const getEntitiesArrFromUrl = (arrEntitiesUrl, stateFunc) => {\r\n  arrEntitiesUrl.map(planetUrl =>\r\n    fetchEntity(planetUrl).then(res => {\r\n      const arr = [res.data];\r\n      stateFunc(prev => [...prev, ...arr]);\r\n    })\r\n  );\r\n};\r\n\r\nexport const getDataFromQuery = location => {\r\n  const q = qs.parse(location.search);\r\n\r\n  return q;\r\n};\r\n\r\n// args is arr [category, id] or [category]\r\nexport const getRoute = args =>\r\n  [...args].reduce((acc, el) => acc + `/${el}`, \"\").trim();\r\n\r\n//helper for sortEntitiesArr()\r\nexport const getNameKey = objSorting => {\r\n  return Object.keys(objSorting).find(key => key === \"name\") === \"name\"\r\n    ? \"name\"\r\n    : \"title\";\r\n};\r\n\r\nexport const sortEntitiesArr = (entitiesArr, nameKey) => {\r\n  return entitiesArr.sort((a, b) => {\r\n    if (a[`${getNameKey(a)}`] > b[`${getNameKey(b)}`]) {\r\n      return 1;\r\n    }\r\n    if (a[`${getNameKey(a)}`] < b[`${getNameKey(b)}`]) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport shortid from \"shortid\";\r\nimport {\r\n  getCategoryFromUrl,\r\n  sortEntitiesArr,\r\n  getNameKey\r\n} from \"../../services/helpers\";\r\nimport css from \"./EntitiesList.module.css\";\r\n\r\nconst EntitiesList = props => {\r\n  const { entitiesArr, match } = props;\r\n\r\n  return (\r\n    <ul>\r\n      {entitiesArr &&\r\n        sortEntitiesArr(entitiesArr).map(entityObj => (\r\n          <li className={css.list} key={shortid.generate()}>\r\n            {entityObj && (\r\n              <NavLink\r\n                to={{\r\n                  pathname: `/${getCategoryFromUrl(entityObj.url)}/${\r\n                    entityObj[`${getNameKey(entityObj)}`]\r\n                  }`,\r\n                  match: {\r\n                    url: entityObj.url,\r\n                    route: match.path\r\n                  }\r\n                }}\r\n              >\r\n                {entityObj[`${getNameKey(entityObj)}`]}\r\n              </NavLink>\r\n            )}\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(EntitiesList);\r\n","import React from \"react\";\r\nimport { fetchEntities } from \"../services/fetchAPI\";\r\nimport EntitiesList from \"../components/EntitiesList/EntitiesList\";\r\n\r\nexport default class FilmsPage extends React.Component {\r\n  state = {\r\n    response: [],\r\n    entitiesValue: \"films\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetchEntities(this.state.entitiesValue).then(res =>\r\n      this.setState({ response: res })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { response } = this.state;\r\n\r\n    const entities = response ? response : null;\r\n\r\n    return (\r\n      <div>\r\n        <EntitiesList entitiesArr={entities} name=\"title\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { getCategoryFromUrl } from \"../../services/helpers\";\r\nimport css from \"./Entity.module.css\";\r\n\r\nconst Entity = props => {\r\n  const { entity } = props;\r\n  const category = getCategoryFromUrl(entity.url);\r\n  const entityName = category\r\n    .split(\"\")\r\n    .filter((el, idx) => idx !== category.length - 1)\r\n    .join(\"\");\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      {entityName !== \"film\" && (\r\n        <h2 className={css.title}>\r\n          {entityName} {entity.name}\r\n        </h2>\r\n      )}\r\n      <ul>\r\n        {entity &&\r\n          Object.entries(entity)\r\n            .filter(el => {\r\n              const [key, value] = el;\r\n              return (\r\n                key !== \"name\" &&\r\n                key !== \"films\" &&\r\n                key !== \"url\" &&\r\n                key !== \"created\" &&\r\n                key !== \"edited\" &&\r\n                value !== \"unknown\" &&\r\n                !Array.isArray(value)\r\n              );\r\n            })\r\n            .map(el => {\r\n              const [key, value] = el;\r\n              return (\r\n                <li className={css.item} key={key}>\r\n                  <p className={css.name}>{key}</p>\r\n                  <p className={css.descr}>{value}</p>\r\n                </li>\r\n              );\r\n            })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EntitiesList from \"../EntitiesList/EntitiesList\";\r\nimport { getEntitiesArrFromUrl } from \"../../services/helpers\";\r\nimport Entity from \"../Entity/Entity\";\r\n\r\nconst SingleFilm = props => {\r\n  const { entity, match } = props;\r\n  const [planets, setPlanets] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getEntitiesArrFromUrl(entity.planets, setPlanets);\r\n    getEntitiesArrFromUrl(entity.starships, setStarships);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <p>Star Wars:</p> <p>{entity.title}</p>\r\n      </h2>\r\n      <EntitiesList entitiesArr={planets} name=\"name\" />\r\n      <EntitiesList entitiesArr={starships} name=\"name\" />\r\n      <Entity entity={entity} match={match} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SingleFilm);\r\n","import React from \"react\";\r\nimport SingleFilm from \"../components/SingleFilm/SingleFilm\";\r\nimport { fetchEntity } from \"../services/fetchAPI\";\r\n\r\nexport default class SingleFilmPage extends React.Component {\r\n  state = {\r\n    entity: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n\r\n    if (location.match) {\r\n      const url = location.match.url;\r\n      fetchEntity(url).then(res => {\r\n        this.setState({ entity: res.data });\r\n        localStorage.setItem(match.path, JSON.stringify(res.data));\r\n      });\r\n    } else {\r\n      this.setState({ entity: JSON.parse(localStorage.getItem(match.path)) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { entity } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return entity && <SingleFilm entity={entity} match={match} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { fetchEntity } from \"../services/fetchAPI\";\r\nimport Entity from \"../components/Entity/Entity\";\r\n\r\nexport default class PlanetPage extends React.Component {\r\n  state = {\r\n    entity: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n\r\n    if (location.match) {\r\n      const url = location.match.url;\r\n      fetchEntity(url).then(res => {\r\n        this.setState({ entity: res.data });\r\n        localStorage.setItem(match.path, JSON.stringify(res.data));\r\n      });\r\n    } else {\r\n      this.setState({ entity: JSON.parse(localStorage.getItem(match.path)) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { entity } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return <div>{entity && <Entity entity={entity} match={match} />}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { fetchEntity } from \"../services/fetchAPI\";\r\nimport Entity from \"../components/Entity/Entity\";\r\n\r\nexport default class StarShips extends React.Component {\r\n  state = {\r\n    entity: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n\r\n    if (location.match) {\r\n      const url = location.match.url;\r\n      fetchEntity(url).then(res => {\r\n        this.setState({ entity: res.data });\r\n        localStorage.setItem(match.path, JSON.stringify(res.data));\r\n      });\r\n    } else {\r\n      this.setState({ entity: JSON.parse(localStorage.getItem(match.path)) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { entity } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return <div>{entity && <Entity entity={entity} match={match} />}</div>;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchEntitiesByQuery } from \"../services/fetchAPI\";\r\nimport EntitiesList from \"../components/EntitiesList/EntitiesList\";\r\nimport { getDataFromQuery } from \"../services/helpers\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchPage = props => {\r\n  const { location } = props;\r\n  const [queryEnts, setQueryEnts] = useState([]);\r\n\r\n  const qObj = getDataFromQuery(location);\r\n\r\n  const categories =\r\n    Object.keys(qObj).length > 1 && qObj.categories.split(\"\").includes(\",\")\r\n      ? qObj.categories.split(\",\")\r\n      : [qObj.categories];\r\n  const query = qObj.q;\r\n\r\n  useEffect(() => {\r\n    setQueryEnts([]);\r\n\r\n    [...categories].map(category =>\r\n      fetchEntitiesByQuery(category, query).then(res => {\r\n        const arr = res;\r\n        setQueryEnts(prev => [...prev, ...arr]);\r\n      })\r\n    );\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        <p>Searched next:</p>\r\n      </h3>\r\n      <EntitiesList entitiesArr={queryEnts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchPage);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport css from \"./Search.module.css\";\r\n\r\nconst options = {\r\n  categories: [\"films\", \"starships\", \"planets\"]\r\n};\r\n\r\nexport default withRouter(\r\n  class InputeForm extends React.Component {\r\n    state = {\r\n      inputQuery: \"\",\r\n      queryResponseArr: []\r\n    };\r\n\r\n    handlerSubmit = e => {\r\n      e.preventDefault();\r\n      const { history } = this.props;\r\n\r\n      const inputQuery = e.target.children[0].value;\r\n\r\n      if (inputQuery)\r\n        return history.push({\r\n          pathname: \"/search\",\r\n          search: `categories=${options.categories}&&q=${inputQuery}`\r\n        });\r\n    };\r\n\r\n    handlerGoBackHome = () => {\r\n      const { history } = this.props;\r\n      history.push(\"/films\");\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handlerGoBackHome}\r\n            className={css.button}\r\n          >\r\n            Home\r\n          </button>\r\n          <form onSubmit={this.handlerSubmit}>\r\n            <input type=\"input\" placeholder=\"Search...\" />\r\n            <button type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport FilmsPage from \"../../pages/FilmsPage\";\r\nimport SingleFilmPage from \"../../pages/SingleFilmPage\";\r\nimport PlanetPage from \"../../pages/PlanetPage\";\r\nimport StarShipsPage from \"../../pages/StarShipsPage\";\r\nimport SearchPage from \"../../pages/SearchPage\";\r\nimport Input from \"../SearchForm/SearchForm\";\r\n\r\nconst StarWars = () => (\r\n  <div>\r\n    <Input />\r\n    <Switch>\r\n      <Route path=\"/search\" exact component={SearchPage} />\r\n      <Route path=\"/films\" exact component={FilmsPage} />\r\n      <Route path=\"/films/:id\" exact component={SingleFilmPage} />\r\n      <Route path=\"/planets/:id\" exact component={PlanetPage} />\r\n      <Route path=\"/starships/:id\" exact component={StarShipsPage} />\r\n      <Redirect to=\"/films\" />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default StarWars;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport StarWars from \"../StarWars/StarWars\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route component={StarWars} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route } from \"react-router-dom\";\n// import './index.css';\nimport App from \"./components/App/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <Route component={App} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}